---
- hosts: gitorastgdb1a.resources-dev.atosorigin.local
  gather_facts: no

  vars:
    oracle_home_size_gb: 10
    tmp_size_gb: 1
    oracle_base: "/oracle/{{ sid }}"
    oracle_home: "/oracle/{{ sid }}/12102"
    install_dir: /sapcd/sapgit/oracle/INSTALLATION_12102/51047708/database
    install_file: /sapcd/sapgit/oracle/SAP12102_new/SAP12102P_1802-20012300.ZIP

  remote_user: oracle

  tasks:
  - fail: msg="Bailing out. this play requires '--extra-vars \"sid=<SID>\""
    when: sid is undefined

  - name: get remote_node name
    action: shell olsnodes | grep -v `olsnodes -l`
    register: remote_node
    failed_when: remote_node == ""
    changed_when: False

  - name: get domain_name
    action: shell cat /etc/resolv.conf | grep search | awk '{print $2}'
    register: domain_name
    failed_when: domain_name.stdout == ""
    changed_when: False

  - name: check oraclehome free disk space
    action: shell df -P /oracle/{{ sid }} | awk 'END { print $4 }'
    register: oraclehomesize
    failed_when: oraclehomesize.stdout|int < oracle_home_size_gb * 1024 * 1024
    changed_when: False

 
  - name: check tmp free disk space
    action: shell df -P /tmp | awk 'END { print $4 }'
    register: tmpsize
    failed_when: tmpsize.stdout|int < tmp_size_gb * 1024 * 1024
    changed_when: False

  - name: check oraclehome free disk space (remote_node)
    action: shell df -P /oracle/{{ sid }} | awk 'END { print $4 }'
    register: remote_oraclehomesize
    failed_when: remote_oraclehomesize.stdout|int < oracle_home_size_gb * 1024 * 1024
    delegate_to: "{{ remote_node.stdout }}.{{ domain_name.stdout }}"
    changed_when: False

  - name: check tmp free disk space (remote_node)
    action: shell df -P /tmp | awk '{ print $4 }'
    register: remote_tmpsize
    failed_when: tmpsize.stdout|int < tmp_size_gb * 1024 * 1024
    delegate_to: "{{ remote_node.stdout }}.{{ domain_name.stdout }}"
    changed_when: False

  - name: unset some variables
    actions: shell unset ORACLE_SID ; unset ORACLE_HOME ; unset ORACLE_BASE ; unset ORABASE_EXEC ; unset ORAENV_ASK ; unset ORAHOME ; unset OLD_ORACLE_BASE

  -name: set some environment variables
   actions: shell export IHRDBMS="/oracle/{{ sid }}/12102" ; export OHRDBMS="/oracle/{{ sid }}/121" ; export SBPFUSER=`which fuser`


  - name: get DBBP internal directory
    action: shell unzip -v {{ install_file }} | awk '{print $8}' | awk -F\/ '{print $1}' | grep -v ^$ |grep -v \- |grep -vi name | sort | uniq | tail -1
    register: internal_directory

  - name: install OPatch
    action: shell $IHRDBMS/bin/unzip -qd $IHRDBMS {{ install_file }} '{{ internal_directory.stdout }}/OPatch/*'

  - name: install MOPatch
    action: shell $IHRDBMS/bin/unzip -qd $IHRDBMS {{ install_file }} '{{ internal_directory.stdout }}/MOPatch/*'

  - name: install DBBP (with MOPatch)
    action: shell export ORACLE_HOME=$IHRDBMS ; $IHRDBMS/MOPatch/mopatch.sh -v -s {{ install_file }}

